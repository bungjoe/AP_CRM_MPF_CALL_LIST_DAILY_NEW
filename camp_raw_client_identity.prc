CREATE OR REPLACE PROCEDURE CAMP_RAW_CLIENT_IDENTITY AS

  PROCEDURE pStats( acTable VARCHAR2, anPerc NUMBER DEFAULT 0.01) IS
  BEGIN
    AP_PUBLIC.CORE_LOG_PKG.pStart( 'Stat:'||upper(acTable));
    DBMS_STATS.Gather_Table_Stats( OwnName => 'AP_CRM', TabName => upper(acTable),Estimate_Percent => anPerc );
    AP_PUBLIC.CORE_LOG_PKG.pEnd;
  END ;
  PROCEDURE pTruncate( acTable VARCHAR2) IS
  BEGIN
    AP_PUBLIC.CORE_LOG_PKG.pStart( 'Trunc:'||upper(acTable) );
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AP_CRM.'||(acTable) ;
    AP_PUBLIC.CORE_LOG_PKG.pEnd ;
  END ;

BEGIN
    AP_PUBLIC.CORE_LOG_PKG.pInit( 'AP_CRM', 'CAMP_RAW_CLIENT_IDENTITY');
    pTruncate('GTT_CMP_CLID_ELIG');
    
		AP_PUBLIC.CORE_LOG_PKG.pStart('Ins:GTT_CMP_CLID_ELIG');
    insert /*+ APPEND */ into ap_Crm.gtt_cmp_clid_elig
    select /*+ USE_HASH(DCS FS EB) */
    eb.skp_client,            eb.id_cuid,                 initcap(eb.name_full)name_full, 
    eb.name_first,            eb.name_middle,             eb.name_last,                       dcl.NAME_MOTHER, 
    eb.date_birth,            eb.name_birth_place,        dcl.NAME_GENDER gender,             dcl.code_religion, eb.code_employment_type, 
    eb.code_education_type,   eb.code_employer_industry,  fs.NAME_FAMILY_STATUS family_status,
    dcl.CNT_PERSON_DEPENDENT  dependent_person,           eb.main_income,                     eb.OTHER_INCOME,
    eb.AMT_EXPENSE_DEBT,      eb.SUM_AMT_ANNUITY_ACTIVE,  eb.total_paid_amount,               eb.total_overpaid_amount
    from AP_CRM.CAMP_ELIG_BASE eb
    join owner_Dwh.dc_client dcl on eb.skp_Client = dcl.skp_Client
    join owner_Dwh.cl_family_status fs on dcl.skp_family_status = fs.skp_family_status
    where eb.ELIGIBLE_FINAL_FLAG = 1 and eb.PRIORITY_ACTUAL > 0
		union all
		select /*+ USE_HASH(DCS FS EB) */
    eb.skp_client,            eb.id_cuid,                 initcap(eb.name_full)name_full, 
    eb.name_first,            eb.name_middle,             eb.name_last,                       dcl.NAME_MOTHER, 
    eb.date_birth,            eb.name_birth_place,        dcl.NAME_GENDER gender,             dcl.code_religion, eb.code_employment_type, 
    eb.code_education_type,   eb.code_employer_industry,  fs.NAME_FAMILY_STATUS family_status,
    dcl.CNT_PERSON_DEPENDENT  dependent_person,           eb.main_income,                     eb.OTHER_INCOME,
    eb.AMT_EXPENSE_DEBT,      eb.SUM_AMT_ANNUITY_ACTIVE,  eb.total_paid_amount,               eb.total_overpaid_amount
    from AP_CRM.camp_orbp_elig_base eb
    join owner_Dwh.dc_client dcl on eb.skp_Client = dcl.skp_Client
    join owner_Dwh.cl_family_status fs on dcl.skp_family_status = fs.skp_family_status
    where eb.ELIGIBLE_FINAL_FLAG = 1 and eb.PRIORITY_ACTUAL > 0;
    AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;
    pStats('GTT_CMP_CLID_ELIG');
    
    AP_PUBLIC.CORE_LOG_PKG.pStart('Merg:GTT_CMP_CLID_ELIG');
    merge into ap_Crm.gtt_cmp_clid_elig tgt
    using
    (
        select /*+ USE_HASH(FOA DCR DCL DCC) */ 
               dcl.skp_Client,          dcl.id_cuid,                  initcap(dcl.name_full)name_full,
               dcl.name_first,          dcl.name_middle,              dcl.name_last,                        dcl.name_mother, 
               dcl.date_birth,          dcl.name_birth_place,         dcl.name_gender,                      dcl.code_religion, null code_employment_type,
               dcl.code_education_type, null code_employer_industry,  fs.NAME_FAMILY_STATUS family_status,  
               dcl.CNT_PERSON_DEPENDENT dependent_person,             null main_income,     null other_income,
               null amt_expense_debt,   null sum_amt_annuity_active,  null total_paid_amount,    null total_overpaid_amount
        from owner_Dwh.f_offer_ad foa 
        left join OWNER_DWH.DC_CREDIT_case_request dcr on foa.skp_application = dcr.skp_application
        left join owner_Dwh.dc_client dcl on dcr.skp_client = dcl.skp_client
        left join owner_Dwh.cl_family_status fs on dcl.skp_family_status = fs.skp_family_status
        left join owner_Dwh.dc_Credit_case dcc on dcr.skp_credit_case = dcc.skp_credit_case
        where 1=1
        and dcc.skp_credit_substatus in (15, 9)
        and (foa.dtime_valid_to >= trunc(sysdate) and foa.dtime_valid_to < to_date('01/01/3000','mm/dd/yyyy'))
        and foa.flag_deleted = 'N'
        and dcr.skp_salesroom in (61891, 2850271)
        and foa.skp_offer_type = 1 --Alternate offer generated by BLAZE
    )src on (tgt.skp_client = src.skp_client and tgt.id_cuid = src.id_cuid)
    when not matched then insert
    (
         skp_Client,          id_cuid,                  name_full,
         name_first,          name_middle,              name_last,         name_mother, 
         date_birth,          name_birth_place,         gender,       code_religion, code_employment_type,
         code_education_type, code_employer_industry,   family_status,  
         dependent_person,    main_income,              other_income,
         amt_expense_debt,    sum_amt_annuity_active,   total_paid_amount, total_overpaid_amount
    )
    values
    (
         src.skp_Client,          src.id_cuid,                  src.name_full,
         src.name_first,          src.name_middle,              src.name_last,         src.name_mother, 
         src.date_birth,          src.name_birth_place,         src.name_gender,       src.code_religion, src.code_employment_type,
         src.code_education_type, src.code_employer_industry,   src.family_status,  
         src.dependent_person,    src.main_income,     src.other_income,
         src.amt_expense_debt,    src.sum_amt_annuity_active,   src.total_paid_amount, src.total_overpaid_amount 
    ); 
    AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;
    pStats('GTT_CMP_CLID_ELIG');
    
    pTruncate('GTT_CMP_CLID_KTP');
    --execute immediate 'truncate table ap_crm.gtt_cmp_clid_ktp';
    AP_PUBLIC.CORE_LOG_PKG.pStart('Ins:GTT_CMP_CLID_KTP');    
    insert /*+ APPEND */ into ap_crm.gtt_cmp_clid_ktp
    SELECT /* */ fCd.SKP_CLIENT, FCD.TEXT_DOCUMENT_NUMBER ID_KTP, FCD.DTIME_VALID_TO EXPIRY_DATE_KTP
    FROM OWNER_DWH.F_CLIENT_DOCUMENT_AD FCD
    WHERE SKP_CLIENT_DOCUMENT_TYPE = 9 and fcd.skp_client in (select nvl(skp_client,-9999) from AP_CRM.GTT_CMP_CLID_ELIG) AND CODE_STATUS = 'a';
    AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;
    pStats('GTT_CMP_CLID_KTP');

    pTruncate('GTT_CMP_CLID_EMAIL');
    --execute immediate 'truncate table ap_Crm.gtt_cmp_clid_email';
    AP_PUBLIC.CORE_LOG_PKG.pStart('Ins:GTT_CMP_CLID_EMAIL');
    insert /*+ APPEND */ into ap_Crm.gtt_cmp_clid_email
    SELECT SKP_CLIENT, TEXT_EMAIL CLIENT_EMAIL
    FROM ( SELECT FAC.SKP_CLIENT, trim(FAC.TEXT_EMAIL)TEXT_EMAIL,
                  ROW_NUMBER() OVER (PARTITION BY FAC.SKP_CLIENT ORDER BY FAC.date_decision DESC) RNK
             FROM OWNER_DWH.F_APPLICATION_CLIENT_TT FAC
             WHERE trim(FAC.TEXT_EMAIL) <> 'XNA' and fac.skp_client in (select nvl(skp_client,-9999) from AP_CRM.GTT_CMP_CLID_ELIG)
         ) Z
    WHERE Z.RNK = 1 ;
    AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;
    pStats('GTT_CMP_CLID_EMAIL');

		ptruncate('gtt_cmp_corec_wn');
		AP_PUBLIC.CORE_LOG_PKG.pStart('Ins:gtt_cmp_corec_wn');
		insert /*+ APPEND */ into gtt_cmp_corec_wn
		with existing as
		(
				 select /*+ MATERIALIZE */ skf_communication_record from camp_comm_rec_wn
				 where skp_client in 
							 (
									 select skp_client from gtt_cmp_clid_elig
							 )
		)
		select /*+ MATERIALIZE */ row_number() over (partition by skf_communication_record order by fcr.dtime_inserted desc) nums,
					fcr.date_call, fcr.skf_communication_record, fcr.skp_credit_case, FCR.SKP_CLIENT, FCR.TEXT_CONTACT, fcr.code_type_code, 
					fcr.code_subtype, fcr.code_comm_subtype_specif, fcr.code_comm_subtype_sub_specif, fcr.code_status, fcr.code_result_type, fcr.text_note
		FROM AP_CRM.CAMP_COMM_REC_OB FCR
		where fcr.skp_client in (select nvl(skp_client,-9999) from AP_CRM.GTT_CMP_CLID_ELIG)
		 AND FCR.DATE_CALL >= trunc(sysdate-5)
		 AND FCR.CODE_TYPE_CODE = 'MPF'
		 and ( 
					 fcr.code_comm_subtype_sub_specif = 'INVLD_NUM'
					 or fcr.code_status = 'NPI'
					 or lower(trim(fcr.text_note)) in ('fake contact', 'family', 'other family', 'friend', 'wn', 'salah sambung','no telepon salah','tidak mengenal pelanggan')
				 )
		 and fcr.text_note not like 'Genesys automatic N/A%'
		 and fcr.skf_communication_record not in (select skf_communication_record from existing);
    AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;
    pStats('gtt_cmp_corec_wn');

    AP_PUBLIC.CORE_LOG_PKG.pStart('Ins:camp_comm_rec_wn');
    merge into camp_comm_rec_wn tgt
		using
		(
				SELECT /*+ USE_HASH (DCL DCR FCR) */
							 fcr.date_call, fcr.skf_communication_record, FCR.SKP_CLIENT, dcl.id_cuid, dcc.text_contract_number contract_number, FCR.TEXT_CONTACT, fcr.code_type_code, fcr.code_subtype, fcr.code_comm_subtype_specif, fcr.code_comm_subtype_sub_specif,
							 fcr.code_status, fcr.code_result_type, fcr.text_note
				FROM AP_CRM.gtt_cmp_corec_wn FCR
				inner join owner_Dwh.dc_client dcl on fcr.skp_client = dcl.skp_client
				inner join owner_dwh.dc_credit_case dcc on fcr.skp_credit_case = dcc.skp_credit_case 
				where nums = 1
		)src on (tgt.skp_client = src.skp_client and tgt.skf_communication_record = src.skf_communication_record)
		when not matched then 
		insert
			 (
					date_call, skf_communication_record, SKP_CLIENT, cuid, contract_number, TEXT_CONTACT, code_type_code, code_subtype, code_comm_subtype_specif, 
					code_comm_subtype_sub_specif, code_status, code_result_type, text_note
			 )
		values
			 (
					src.date_call, src.skf_communication_record, src.SKP_CLIENT, src.id_cuid, src.contract_number, src.TEXT_CONTACT, 
					src.code_type_code, src.code_subtype, src.code_comm_subtype_specif, src.code_comm_subtype_sub_specif, src.code_status, src.code_result_type, src.text_note
			 );    
    AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;
    pStats('camp_comm_rec_wn');

    pTruncate('GTT_CMP_CLID_PHONE');
    AP_PUBLIC.CORE_LOG_PKG.pStart('Ins:GTT_CMP_CLID_PHONE');
    insert /*+ APPEND */ into AP_CRM.GTT_CMP_CLID_PHONE
		with clc as
		(
				 select /*+ MATERIALIZE */
								CLC.SKP_CLIENT, CLC.SKP_CONTACT_TYPE, CLC.TEXT_CONTACT, CLC.CODE_STATUS XCODE_STATUS, CLC.DTIME_VALID_FROM, CLC.CNT_CLIENT_CONTACT
				FROM OWNER_DWH.F_CLIENT_CONTACT_TT CLC
				where clc.skp_client in (select nvl(skp_client,-9999) from AP_CRM.GTT_CMP_CLID_ELIG)
					and clc.text_contact not in (select text_contact from camp_comm_rec_wn we join gtt_cmp_clid_elig el on we.skp_client = el.skp_client) 
					AND CLC.FLAG_DELETED = 'N' AND CLC.FLAG_CURRENT = 'Y' AND CLC.CODE_STATUS = 'a'
		       
		),
		contact as
		(
				SELECT /*+ FULL(CLC) USE_HASH(CLC WN CT2) */ 
						ROW_NUMBER() OVER (PARTITION BY CLC.SKP_CLIENT, CT2.ID_SOURCE ORDER BY  CLC.DTIME_VALID_FROM DESC ) ORD,
						CLC.SKP_CLIENT, CLC.TEXT_CONTACT, CLC.XCODE_STATUS, CLC.DTIME_VALID_FROM, CLC.CNT_CLIENT_CONTACT, CT2.ID_SOURCE,
						WN.SKP_CLIENT AS WN_CLIENT,
						WN.TEXT_CONTACT AS WN_TEXT_CONTACT
				FROM CLC 
				JOIN OWNER_DWH.CL_CONTACT_TYPE CT2 ON CLC.SKP_CONTACT_TYPE = CT2.SKP_CONTACT_TYPE
																					AND CT2.ID_SOURCE IN ('PRIMARY_MOBILE', 'SECONDARY_MOBILE', 'MOBILE' )
				left join camp_comm_rec_wn wn on CLC.SKP_CLIENT = WN.SKP_CLIENT AND WN.TEXT_CONTACT = CLC.TEXT_CONTACT
		),
		fin as
		(
				SELECT ROW_NUMBER() OVER ( PARTITION BY SKP_CLIENT ORDER BY DTIME_VALID_FROM) ORD_PHONE,
							 MAX(CASE WHEN ID_SOURCE IN ('PRIMARY_MOBILE' ) THEN TEXT_CONTACT  END ) OVER ( PARTITION BY SKP_CLIENT) PRIMARYM_1,
							 MAX(CASE WHEN ID_SOURCE IN ('SECONDARY_MOBILE' ) THEN TEXT_CONTACT  END ) OVER ( PARTITION BY SKP_CLIENT) PRIMARYM_2,
							 MAX(CASE WHEN ID_SOURCE IN ('MOBILE' ) THEN TEXT_CONTACT  END ) OVER ( PARTITION BY SKP_CLIENT) PRIMARYM_3,
							 contact.* from contact where ord = 1
		)
		select fin.skp_client, fin.PRIMARYM_1, fin.PRIMARYM_2, fin.PRIMARYM_3, fin.WN_CLIENT, fin.WN_TEXT_CONTACT from fin where ord_phone = 1;
    AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;
    pStats('GTT_CMP_CLID_PHONE');
    
    pTruncate('GTT_CMP_CLID_ADDRESS');
    AP_PUBLIC.CORE_LOG_PKG.pStart('Ins:GTT_CMP_CLID_ADDRESS');
    insert /*+ APPEND */ into AP_CRM.GTT_CMP_CLID_ADDRESS
    with base as
    (
        select fca.skp_client, fca.skp_address
        FROM OWNER_DWH.F_CLIENT_ADDRESS_TT fca
				JOIN OWNER_DWH.CL_ADDRESS_TYPE     CAT ON FCA.SKP_ADDRESS_TYPE = CAT.SKP_ADDRESS_TYPE
				WHERE fca.skp_client in (select nvl(skp_client,-9999) from AP_CRM.GTT_CMP_CLID_ELIG)
             and  CODE_ADDRESS_TYPE IN ('CONTACT') AND FCA.FLAG_CURRENT IN ('Y') AND FCA.CODE_STATUS IN ('a')
    )
    SELECT /*+ USE_HASH(FCA DHA) */ SKP_CLIENT, full_address, name_town, name_subdistrict, code_zip_code, name_district 
    FROM ( SELECT ROW_NUMBER() OVER (PARTITION BY FCA.SKP_CLIENT ORDER BY DHA.DTIME_SOURCE_INSERTED DESC) ROWN,
                  FCA.SKP_CLIENT,
                  CASE WHEN UPPER(NAME_STREET) LIKE '%JL%' THEN NAME_STREET ELSE 'Jl '||NAME_STREET END ||' no. '||
                  CASE WHEN TEXT_STREET_NUMBER = '0' THEN TEXT_FLOOR_NUMBER ELSE TEXT_STREET_NUMBER END ||
                  CASE WHEN TEXT_BLOCK_NUMBER <> '0' THEN ', RT'||TEXT_BLOCK_NUMBER ELSE '' END  ||
                  CASE WHEN TEXT_BUILDING_NUMBER <> '0' THEN ', RW'||TEXT_BUILDING_NUMBER ELSE '' END 
                  ||', '||NAME_TOWN||', '||NAME_SUBDISTRICT||' - '||CODE_ZIP_CODE FULL_ADDRESS,
                  NAME_TOWN, NAME_SUBDISTRICT, CODE_ZIP_CODE, NAME_DISTRICT
             FROM base FCA
             JOIN OWNER_DWH.DH_ADDRESS DHA ON FCA.SKP_ADDRESS = DHA.SKP_ADDRESS
        )
    WHERE ROWN = 1;
    AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;
    pStats('GTT_CMP_CLID_ADDRESS');

    pTruncate('GTT_CMP_CLID_DEAD');
    AP_PUBLIC.CORE_LOG_PKG.pStart('Ins:GTT_CMP_CLID_DEAD');
    insert /*+ APPEND */ into ap_crm.gtt_cmp_clid_dead
    SELECT /*+ MATERIALIZE USE_HASH(T CAD) */ CAD.SKP_CLIENT, T.CONTRACT_ID 
    FROM AP_COLL.FT_COLLECTIONS_EXCEPTIONS_LIST T
    inner join owner_Dwh.dc_credit_case CAD ON CAD.TEXT_CONTRACT_NUMBER = TRIM(T.CONTRACT_ID)
    WHERE cad.skp_client in (select nvl(skp_client,-9999) from AP_CRM.GTT_CMP_CLID_ELIG) and UPPER(REASON_FOR_LIST) LIKE '%DEATH%';
    AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;
    pStats('GTT_CMP_CLID_DEAD');

    pTruncate('CAMP_CLIENT_IDENTITY');
    AP_PUBLIC.CORE_LOG_PKG.pStart('Ins:CAMP_CLIENT_IDENTITY');
    insert /*+ APPEND */ into ap_crm.camp_client_identity
    select /*+ */ eb.skp_client,   eb.id_cuid,                 initcap(eb.name_full)name_full, 
    eb.name_first,          eb.name_middle,             eb.name_last,         eb.name_mother, 
    eb.date_birth,          eb.name_birth_place,        eb.gender,            eb.code_religion, eb.code_employment_type, 
    eb.code_education_type, eb.code_employer_industry,  eb.family_status,     eb.dependent_person
    ,eb.main_income,        eb.OTHER_INCOME,            eb.AMT_EXPENSE_DEBT,  eb.SUM_AMT_ANNUITY_ACTIVE, eb.total_paid_amount, eb.total_overpaid_amount
    ,ID_KTP,                EXPIRY_DATE_KTP,            email.CLIENT_EMAIL
    ,PRIMARYM_1,            PRIMARYM_2,                 PRIMARYM_3, null, null 
    ,full_address,          name_town,                  name_subdistrict,     code_zip_code, name_district
    ,case when dd.CONTRACT_ID is null then 'N' else 'Y' end dead_customer
    from ap_crm.gtt_cmp_clid_elig eb
    left join ap_crm.gtt_cmp_clid_ktp ktp on eb.skp_client = ktp.skp_client
    left join ap_crm.gtt_cmp_clid_email email on eb.skp_Client = email.skp_client
    left join ap_crm.gtt_cmp_clid_phone ph on eb.skp_Client = ph.skp_Client
    left join ap_crm.gtt_cmp_clid_address ca on eb.skp_client = ca.skp_client
    left join ap_crm.gtt_cmp_clid_dead dd on eb.skp_client = dd.skp_Client;
    AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;
    pStats('CAMP_CLIENT_IDENTITY');
  
if trunc(sysdate) < to_date('07/26/2018','mm/dd/yyyy') then 
	goto finish_line;
end if;
    /*********************************************** Collect phone numbers from sources ***********************************************************************/
    
		AP_PUBLIC.CORE_LOG_PKG.pStart('Ins:camp_alt_cont_fcr');
		merge into camp_alt_cont_fcr tgt
		using
		(
          
				select dtime_inserted, skp_client, skp_credit_case, text_contact 
				from 
				(
						select fcr.dtime_inserted, fcr.skp_client, fcr.skp_credit_case, fcr.text_contact, fcr.code_channel
                 
						from owner_dwh.f_communication_record_tt fcr 
						where fcr.dtime_inserted >= trunc(sysdate-1)
				)
				where skp_client in (select skp_client from camp_elig_base where eligible_final_flag = 1)
				and code_channel = 'IC'
				and text_contact like '8%'
		)src on (tgt.dtime_inserted = src.dtime_inserted and tgt.skp_client = src.skp_client and tgt.text_contact = src.text_contact)
		when not matched then insert
			(dtime_inserted, skp_client, skp_credit_case, text_contact ) values (src.dtime_inserted, src.skp_client, src.skp_credit_case, src.text_contact );
		AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;
    pStats('camp_alt_cont_fcr');

    ptruncate('gtt_camp_alt_cont_raw');
    AP_PUBLIC.CORE_LOG_PKG.pStart('Ins:gtt_camp_alt_cont_raw');
    insert /*+ APPEND */ into gtt_camp_alt_cont_raw
    with 
    contracts as
    (
         select /*+ MATERIALIZE */ * from
				 (
						 select skp_client, dtime_proposal, skp_credit_case, text_contract_number from camp_pos_contracts
						 union 
						 select skp_client, dtime_appl_creation, skp_credit_case, contract from camp_mpf_contracts
				 )where text_contract_number not in (select text_contract_number from ap_bicc.dc_testing_contract)     
    ),
    phone as
    (
        select fcr.skp_credit_case, fcr.text_contact, con.NAME_CONTACT_TYPE, crt.NAME_CONTACT_RELATION_TYPE 
        from owner_Dwh.f_Credit_Case_Request_Cont_Tt fcr
        join owner_Dwh.cl_contact_type con on fcr.skp_contact_type = con.SKP_CONTACT_TYPE
        join owner_Dwh.cl_contact_relation_type crt on fcr.skp_contact_relation_type = crt.SKP_CONTACT_RELATION_TYPE
        where skp_Credit_case in 
              ( 
                select skp_credit_case from contracts
              )
          and fcr.skp_contact_relation_type = 4 
          and fcr.skp_contact_type = 2
          and fcr.flag_deleted = 'N'
          and fcr.flag_is_application = 'Y' 
    ),
    finals as
    (
        select pos.skp_client, -1, max(pos.dtime_proposal)dtime_proposal, phone.text_contact 
        from contracts pos
        join phone on pos.skp_credit_case = phone.skp_credit_case
        group by pos.skp_client, phone.text_contact
        union all
        select fcr.skp_client, -1, max(fcr.dtime_inserted)dtime_created, fcr.text_contact from camp_alt_cont_fcr fcr
        where skp_client in (select skp_client from camp_elig_base where eligible_final_flag = 1)
        group by fcr.skp_client, fcr.text_contact
        union all
        select dcl.skp_client, -1, created_date, phone from ap_bicc.stg_mob_user usr
        join owner_dwh.dc_client dcl on usr.cuid = dcl.id_cuid
        where cuid in (select id_cuid from camp_elig_base where eligible_final_flag = 1)   
    )
    select ax.*, row_number() over (partition by ax.skp_client order by ax.dtime_proposal desc)nums 
    from finals ax;
		AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;
    pStats('gtt_camp_alt_cont_raw');

    AP_PUBLIC.CORE_LOG_PKG.pStart('merge:camp_alt_number');
    merge into camp_alt_number tgt
    using
    (
        select id_cuid, skp_client, text_contact, flag_status from
				(
						select row_number() over (partition by rw.skp_client order by rw.skp_client)nums,
									 dcl.id_cuid, rw.skp_client, rw.text_contact, 1 flag_status  
						from gtt_camp_alt_cont_raw rw
						join owner_dwh.dc_Client dcl on rw.skp_client = dcl.skp_client
						join camp_client_identity cci on rw.skp_client = cci.skp_client
						where rw.text_contact like '8%'
							and (cci.primarym_1 <> rw.text_contact and cci.primarym_2 is null and cci.primarym_3 is null)
				)ax where ax.nums = 1
    )src on (tgt.id_cuid = src.id_cuid and tgt.text_contact = src.text_contact)
    when not matched then insert
      (
         tgt.id_cuid, tgt.skp_client, tgt.text_contact, tgt.flag_status
      )
    values
    (
      src.id_cuid, src.skp_client, src.text_contact, src.flag_status
    );
    AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;
    pStats('camp_alt_number');
/***********************************************************************************************************************************************************/

/************************************************ Calculating Phone Number Attempt and Responses ***********************************************************/
    AP_PUBLIC.CORE_LOG_PKG.pStart('ins:camp_identity_wn');
    merge into camp_identity_wn tgt
    using 
    (
        with 
        w$1 as
        (
            select /*+ MATERIALIZE */ cro.date_call, cro.skp_client, cro.text_contact, cro.text_note, cro.code_status, cro.code_comm_subtype_sub_specif,
                   skp_communication_result_type, cro.skp_communication_status
             from ap_crm.camp_comm_rec_ob cro
            where date_call >= trunc(sysdate-5)
             AND cro.CODE_TYPE_CODE = 'MPF'
             and ( 
                   cro.code_comm_subtype_sub_specif = 'INVLD_NUM'
                   or cro.code_status = 'NPI'
                   or lower(trim(cro.text_note)) in ('fake contact', 'family', 'other family', 'friend', 'wn', 'salah sambung','no telepon salah','tidak mengenal pelanggan')
                 )
             and cro.text_note not like 'Genesys automatic N/A%'
             and (cro.skp_client, cro.text_contact) in (select skp_client, text_contact from camp_alt_number where flag_status = 1) 
        ),
        base as
        (
           select /*+ MATERIALIZE */ cro.date_call, dcl.id_cuid, cro.text_contact, cro.text_note, cro.code_status, cro.code_comm_subtype_sub_specif
            from w$1 cro
            join owner_Dwh.dc_Client dcl on cro.skp_client = dcl.skp_client
            join owner_Dwh.Cl_Communication_Result_Type ccr on cro.skp_communication_result_type = ccr.skp_communication_result_type
            join owner_Dwh.cl_communication_status ccs on cro.skp_communication_status = ccs.SKP_COMMUNICATION_STATUS            
        )
        select * from base
    )src on (tgt.date_call = src.date_call and tgt.id_cuid = src.id_cuid and tgt.text_contact = src.text_contact)
    when not matched then insert
      (tgt.date_call, tgt.id_cuid, tgt.text_contact) values (src.date_call,src.id_cuid, src.text_contact);
    AP_PUBLIC.CORE_LOG_PKG.pEnd;
    commit;
    pStats('camp_identity_wn');
    
    AP_PUBLIC.CORE_LOG_PKG.pStart('merge:camp_alt_number');
    merge into ap_crm.camp_alt_number tgt
    using
    (
        select distinct id_cuid, text_contact, 0 flag_status
        from ap_crm.camp_identity_wn
    )src on (tgt.id_cuid = src.id_cuid and tgt.text_contact = src.text_contact)
    when matched then update set tgt.flag_status = src.flag_status;
    AP_PUBLIC.CORE_LOG_PKG.pEnd ;
    commit;  
    pStats('camp_alt_number');
    
<<finish_line>>
    AP_PUBLIC.CORE_LOG_PKG.pFinish ;
END;
